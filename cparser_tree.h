/*----------------------------------------------------------------------
 * This file is generated by mk_parser.py.
 *----------------------------------------------------------------------*/
#ifndef __CPARSER_TREE_H__
#define __CPARSER_TREE_H__

#ifdef __cplusplus
extern "C"
{
#endif /* __cplusplus */

    extern cparser_node_t cparser_root;

    cparser_result_t cparser_cmd_rd_filename_offset_nbytes_dohex(cparser_context_t *context,
                                                                 char **filename_ptr,
                                                                 uint32_t *offset_ptr,
                                                                 uint32_t *nbytes_ptr,
                                                                 char **dohex_ptr);
    cparser_result_t cparser_cmd_wd_filename_offset_nbytes(cparser_context_t *context,
                                                           char **filename_ptr,
                                                           uint32_t *offset_ptr,
                                                           uint32_t *nbytes_ptr);
    cparser_result_t cparser_cmd_curr_filename(cparser_context_t *context,
                                               char **filename_ptr);
    cparser_result_t cparser_cmd_ru_offset_nbytes_dohex(cparser_context_t *context,
                                                        uint32_t *offset_ptr,
                                                        uint32_t *nbytes_ptr,
                                                        char **dohex_ptr);
    cparser_result_t cparser_cmd_wu_offset_nbytes(cparser_context_t *context,
                                                  uint32_t *offset_ptr,
                                                  uint32_t *nbytes_ptr);
    cparser_result_t cparser_cmd_smap_high_base(cparser_context_t *context,
                                                uint32_t *high_ptr,
                                                uint32_t *base_ptr);
    cparser_result_t cparser_cmd_map_kaddr(cparser_context_t *context,
                                           uint32_t *kaddr_ptr);
    cparser_result_t cparser_cmd_help_filter(cparser_context_t *context,
                                             char **filter_ptr);
    cparser_result_t cparser_cmd_exit(cparser_context_t *context);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* __CPARSER_TREE_H__ */
